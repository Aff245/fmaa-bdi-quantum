name: ⚛️ Quantum Circuit Tests

on:
  push:
    paths:
      - 'quantum/**'
      - 'requirements-quantum.txt'
  pull_request:
    paths:
      - 'quantum/**'
      - 'requirements-quantum.txt'
  workflow_dispatch:
    inputs:
      circuit_type:
        description: 'Type of quantum circuits to test'
        required: true
        default: 'all'
        type: choice
        options:
          - 'all'
          - 'optimization'
          - 'machine_learning'
          - 'error_correction'
          - 'variational'

jobs:
  quantum-circuit-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        backend: ['qasm_simulator', 'statevector_simulator', 'aer_simulator']
        circuit_depth: [5, 10, 20]
        qubits: [4, 8, 12]
    
    steps:
    - name: 📂 Checkout
      uses: actions/checkout@v4
    
    - name: 🐍 Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: ⚛️ Install Quantum Dependencies
      run: |
        pip install -r requirements-quantum.txt
        
        # Install additional benchmarking tools
        pip install qiskit-experiments matplotlib-base
    
    - name: 🧪 Test Quantum Circuits
      env:
        QUANTUM_BACKEND: ${{ matrix.backend }}
        CIRCUIT_DEPTH: ${{ matrix.circuit_depth }}
        NUM_QUBITS: ${{ matrix.qubits }}
      run: |
        # Test quantum optimization algorithms
        python -m pytest tests/quantum/test_algorithms.py::test_quantum_optimization -v
        
        # Test quantum machine learning
        python -m pytest tests/quantum/test_algorithms.py::test_quantum_ml -v
        
        # Test variational circuits
        python -m pytest tests/quantum/test_models.py::test_variational_circuits -v
    
    - name: 📊 Circuit Performance Analysis
      run: |
        python quantum/simulators/qiskit_simulator.py --benchmark \
          --backend=${{ matrix.backend }} \
          --qubits=${{ matrix.qubits }} \
          --depth=${{ matrix.circuit_depth }}
    
    - name: 📈 Generate Circuit Visualization
      run: |
        python scripts/generate_circuit_diagrams.py \
          --backend=${{ matrix.backend }} \
          --qubits=${{ matrix.qubits }}
    
    - name: 📤 Upload Circuit Results
      uses: actions/upload-artifact@v4
      with:
        name: quantum-circuits-${{ matrix.backend }}-${{ matrix.qubits }}q-${{ matrix.circuit_depth }}d
        path: |
          data/output/circuits/
          data/output/benchmarks/
        retention-days: 30

  quantum-memory-stress-test:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    - name: 📂 Checkout
      uses: actions/checkout@v4
    
    - name: 🐍 Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: ⚛️ Install Dependencies
      run: |
        pip install -r requirements-quantum.txt
        pip install memory-profiler psutil
    
    - name: 🧪 Memory Stress Test
      run: |
        # Test maximum qubit simulation within GitHub Actions limits
        python scripts/quantum_memory_test.py --max-memory=14 --max-qubits=20
    
    - name: 📊 Memory Usage Report
      run: |
        python scripts/analyze_memory_usage.py
